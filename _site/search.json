[
  {
    "objectID": "posts/advent_of_code_2024/day_2/index.html#day-2-red-nosed-reports",
    "href": "posts/advent_of_code_2024/day_2/index.html#day-2-red-nosed-reports",
    "title": "AOC 2024: Day 2",
    "section": "Day 2: Red-Nosed Reports",
    "text": "Day 2: Red-Nosed Reports\nFortunately, the first location The Historians want to search isn’t a long walk from the Chief Historian’s office.\nWhile the Red-Nosed Reindeer nuclear fusion/fission plant appears to contain no sign of the Chief Historian, the engineers there run up to you as soon as they see you. Apparently, they still talk about the time Rudolph was saved through molecular synthesis from a single electron.\nThey’re quick to add that - since you’re already here - they’d really appreciate your help analyzing some unusual data from the Red-Nosed reactor. You turn to check if The Historians are waiting for you, but they seem to have already divided into groups that are currently searching every corner of the facility. You offer to help with the unusual data.\nThe unusual data (your puzzle input) consists of many reports, one report per line. Each report is a list of numbers called levels that are separated by spaces. For example:\n7 6 4 2 1\n1 2 7 8 9\n9 7 6 2 1\n1 3 2 4 5\n8 6 4 4 1\n1 3 6 7 9\nThis example data contains six reports each containing five levels.\nThe engineers are trying to figure out which reports are safe. The Red-Nosed reactor safety systems can only tolerate levels that are either gradually increasing or gradually decreasing. So, a report only counts as safe if both of the following are true:\n\nThe levels are either all increasing or all decreasing.\nAny two adjacent levels differ by at least one and at most three.\n\nIn the example above, the reports can be found safe or unsafe by checking those rules:\n\n7 6 4 2 1: Safe because the levels are all decreasing by 1 or 2.\n1 2 7 8 9: Unsafe because 2 7 is an increase of 5.\n9 7 6 2 1: Unsafe because 6 2 is a decrease of 4.\n1 3 2 4 5: Unsafe because 1 3 is increasing but 3 2 is decreasing.\n8 6 4 4 1: Unsafe because 4 4 is neither an increase or a decrease.\n1 3 6 7 9: Safe because the levels are all increasing by 1, 2, or 3.\n\nSo, in this example, 2 reports are safe.\nAnalyze the unusual data from the engineers. How many reports are safe?\n\n# Get input as a list of numeric vectors\ninput &lt;- readr::read_lines(\"input\") |&gt;\n  as.list() |&gt;\n  purrr::map(\n    \\(report) {\n      report |&gt;\n        stringr::str_split(pattern = \" \", simplify = TRUE) |&gt;\n        as.numeric()\n    }\n  )\n\n# Function to check if one report is safe\nreport_is_safe &lt;- function(report) {\n  # Get change between each level\n  diffs &lt;- (report - lag(report)) |&gt;\n    purrr::discard(is.na)\n  \n  # ALl same direction (i.e. increasing or decreasing)\n  all_same_direction &lt;- diffs |&gt;\n    sign() |&gt;\n    unique() |&gt;\n    vctrs::vec_is(size = 1)\n      \n  # All correct delta (&gt;=1, &lt;=3)\n  all_correct_delta &lt;- all(\n    all(abs(diffs) &lt;= 3),\n    all(abs(diffs) &gt;= 1)\n  )\n  \n  all_same_direction && all_correct_delta\n}\n\n# Apply function to all reports\nsolution &lt;- input |&gt;\n  purrr::map_lgl(report_is_safe) |&gt;\n  sum()\n\nsolution\n\n[1] 0\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_2/index.html#part-two",
    "href": "posts/advent_of_code_2024/day_2/index.html#part-two",
    "title": "AOC 2024: Day 2",
    "section": "Part Two",
    "text": "Part Two\nThe engineers are surprised by the low number of safe reports until they realize they forgot to tell you about the Problem Dampener.\nThe Problem Dampener is a reactor-mounted module that lets the reactor safety systems tolerate a single bad level in what would otherwise be a safe report. It’s like the bad level never happened!\nNow, the same rules apply as before, except if removing a single level from an unsafe report would make it safe, the report instead counts as safe.\nMore of the above example’s reports are now safe:\n\n7 6 4 2 1: Safe without removing any level.\n1 2 7 8 9: Unsafe regardless of which level is removed.\n9 7 6 2 1: Unsafe regardless of which level is removed.\n1 3 2 4 5: Safe by removing the second level, 3.\n8 6 4 4 1: Safe by removing the third level, 4.\n1 3 6 7 9: Safe without removing any level.\n\nThanks to the Problem Dampener, 4 reports are actually safe!\nUpdate your analysis by handling situations where the Problem Dampener can remove a single level from unsafe reports. How many reports are now safe?\n\nsolution2 &lt;- input |&gt;\n  purrr::map_lgl(\n    \\(report) {\n      # Check all subset reports with one level removed\n      safe_subsets &lt;- combn(report, \n                            length(report)-1,\n                            simplify = FALSE) |&gt;\n        purrr::map_lgl(report_is_safe)\n      \n      # Return TRUE if either the report is safe or one of the subsets is safe\n      report_is_safe(report) || any(safe_subsets)\n    }\n  ) |&gt;\n  sum()\n\nsolution2\n\n[1] 0\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_1/index.html",
    "href": "posts/advent_of_code_2024/day_1/index.html",
    "title": "AOC 2024: Day 1",
    "section": "",
    "text": "I’ve decided to try and do Advent of Code this year, and see how far I get before work and/or life gets in the way!\nI plan to use R mainly, and I think generally there are three ways to approach (or three choices to prioritise for) AoC solutions: speed, code golf or readability. I’ll be going for the latter of the three so will be using tidyverse packages where possible."
  },
  {
    "objectID": "posts/advent_of_code_2024/day_1/index.html#intro",
    "href": "posts/advent_of_code_2024/day_1/index.html#intro",
    "title": "AOC 2024: Day 1",
    "section": "",
    "text": "I’ve decided to try and do Advent of Code this year, and see how far I get before work and/or life gets in the way!\nI plan to use R mainly, and I think generally there are three ways to approach (or three choices to prioritise for) AoC solutions: speed, code golf or readability. I’ll be going for the latter of the three so will be using tidyverse packages where possible."
  },
  {
    "objectID": "posts/advent_of_code_2024/day_1/index.html#day-1-historian-hysteria",
    "href": "posts/advent_of_code_2024/day_1/index.html#day-1-historian-hysteria",
    "title": "AOC 2024: Day 1",
    "section": "Day 1: Historian Hysteria",
    "text": "Day 1: Historian Hysteria\nThe Chief Historian is always present for the big Christmas sleigh launch, but nobody has seen him in months! Last anyone heard, he was visiting locations that are historically significant to the North Pole; a group of Senior Historians has asked you to accompany them as they check the places they think he was most likely to visit.\nAs each location is checked, they will mark it on their list with a star. They figure the Chief Historian must be in one of the first fifty places they’ll look, so in order to save Christmas, you need to help them get fifty stars on their list before Santa takes off on December 25th.\nCollect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!\nYou haven’t even left yet and the group of Elvish Senior Historians has already hit a problem: their list of locations to check is currently empty. Eventually, someone decides that the best place to check first would be the Chief Historian’s office.\nUpon pouring into the office, everyone confirms that the Chief Historian is indeed nowhere to be found. Instead, the Elves discover an assortment of notes and lists of historically significant locations! This seems to be the planning the Chief Historian was doing before he left. Perhaps these notes can be used to determine which locations to search?\nThroughout the Chief’s office, the historically significant locations are listed not by name but by a unique number called the location ID. To make sure they don’t miss anything, The Historians split into two groups, each searching the office and trying to create their own complete list of location IDs.\nThere’s just one problem: by holding the two lists up side by side (your puzzle input), it quickly becomes clear that the lists aren’t very similar. Maybe you can help The Historians reconcile their lists?\nFor example:\n3   4\n4   3\n2   5\n1   3\n3   9\n3   3\nMaybe the lists are only off by a small amount! To find out, pair up the numbers and measure how far apart they are. Pair up the smallest number in the left list with the smallest number in the right list, then the second-smallest left number with the second-smallest right number, and so on.\nWithin each pair, figure out how far apart the two numbers are; you’ll need to add up all of those distances. For example, if you pair up a 3 from the left list with a 7 from the right list, the distance apart is 4; if you pair up a 9 with a 3, the distance apart is 6.\nIn the example list above, the pairs and distances would be as follows:\n\nThe smallest number in the left list is 1, and the smallest number in the right list is 3. The distance between them is 2.\nThe second-smallest number in the left list is 2, and the second-smallest number in the right list is another 3. The distance between them is 1.\nThe third-smallest number in both lists is 3, so the distance between them is 0.\nThe next numbers to pair up are 3 and 4, a distance of 1.\nThe fifth-smallest numbers in each list are 3 and 5, a distance of 2.\nFinally, the largest number in the left list is 4, while the largest number in the right list is 9; these are a distance 5 apart.\n\nTo find the total distance between the left list and the right list, add up the distances between all of the pairs you found. In the example above, this is 2 + 1 + 0 + 1 + 2 + 5, a total distance of 11!\nYour actual left and right lists contain many location IDs. What is the total distance between your lists?\n\nlibrary(dplyr, warn.conflicts = FALSE)\n\ninput &lt;- readr::read_delim(\"input\",\n                           col_names = c(\"left\", \"right\"),\n                           col_types = list(\"i\", \"i\"),\n                           delim = \"   \")\n\nsolution &lt;- bind_cols(\n  left = sort(input$left),\n  right = sort(input$right)\n) |&gt;\n  mutate(distance = abs(left-right)) |&gt;\n  pull(distance) |&gt;\n  sum()\n\nsolution\n\n[1] 1765812\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_1/index.html#part-two",
    "href": "posts/advent_of_code_2024/day_1/index.html#part-two",
    "title": "AOC 2024: Day 1",
    "section": "Part Two",
    "text": "Part Two\nYour analysis only confirmed what everyone feared: the two lists of location IDs are indeed very different.\nOr are they?\nThe Historians can’t agree on which group made the mistakes or how to read most of the Chief’s handwriting, but in the commotion you notice an interesting detail: a lot of location IDs appear in both lists! Maybe the other numbers aren’t location IDs at all but rather misinterpreted handwriting.\nThis time, you’ll need to figure out exactly how often each number from the left list appears in the right list. Calculate a total similarity score by adding up each number in the left list after multiplying it by the number of times that number appears in the right list.\nHere are the same example lists again:\n3   4\n4   3\n2   5\n1   3\n3   9\n3   3\nFor these example lists, here is the process of finding the similarity score: - The first number in the left list is 3. It appears in the right list three times, so the similarity score increases by 3 * 3 = 9. - The second number in the left list is 4. It appears in the right list once, so the similarity score increases by 4 * 1 = 4. - The third number in the left list is 2. It does not appear in the right list, so the similarity score does not increase (2 * 0 = 0). - The fourth number, 1, also does not appear in the right list. - The fifth number, 3, appears in the right list three times; the similarity score increases by 9. - The last number, 3, appears in the right list three times; the similarity score again increases by 9.\nSo, for these example lists, the similarity score at the end of this process is 31 (9 + 4 + 0 + 0 + 9 + 9).\nOnce again consider your left and right lists. What is their similarity score?\n\nsolution_2 &lt;- input |&gt;\n  select(left) |&gt;\n  mutate(\n    n_occurrences = purrr::map_int(left, \\(id) sum(input$right == id)),\n    sim_score = left * n_occurrences\n  ) |&gt;\n  pull(sim_score) |&gt;\n  sum()\n\nsolution_2\n\n[1] 20520794\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_3/index.html#day-3-mull-it-over",
    "href": "posts/advent_of_code_2024/day_3/index.html#day-3-mull-it-over",
    "title": "AOC 2024: Day 3",
    "section": "Day 3: Mull It Over",
    "text": "Day 3: Mull It Over\n“Our computers are having issues, so I have no idea if we have any Chief Historians in stock! You’re welcome to check the warehouse, though,” says the mildly flustered shopkeeper at the North Pole Toboggan Rental Shop. The Historians head out to take a look.\nThe shopkeeper turns to you. “Any chance you can see why our computers are having issues again?”\nThe computer appears to be trying to run a program, but its memory (your puzzle input) is corrupted. All of the instructions have been jumbled up!\nIt seems like the goal of the program is just to multiply some numbers. It does that with instructions like mul(X,Y), where X and Y are each 1-3 digit numbers. For instance, mul(44,46) multiplies 44 by 46 to get a result of 2024. Similarly, mul(123,4) would multiply 123 by 4.\nHowever, because the program’s memory has been corrupted, there are also many invalid characters that should be ignored, even if they look like part of a mul instruction. Sequences like mul(4*, mul(6,9!, ?(12,34), or mul ( 2 , 4 ) do nothing.\nFor example, consider the following section of corrupted memory:\nxmul(2,4)%&mul[3,7]!@^do_not_ mul(5,5)+mul(32,64]then( mul(11,8) mul(8,5))\nOnly the four highlighted sections are real mul instructions. Adding up the result of each instruction produces 161 (2*4 + 5*5 + 11*8 + 8*5).\nScan the corrupted memory for uncorrupted mul instructions. What do you get if you add up all of the results of the multiplications?\n\nlibrary(dplyr, warn.conflicts = FALSE)\n\n# Helper for list matrix\nto_tibble &lt;- function(l) {\n  l |&gt;\n    purrr::pluck(1) |&gt;\n    tibble::as_tibble() |&gt;\n    rlang::set_names(c(\"match\", \"first\", \"second\"))\n}\n\n# Read in input as single character vector\ninput &lt;- readr::read_lines(\"input\") |&gt;\n  stringr::str_c(collapse = \"\")\n\nsolution &lt;- input |&gt;\n  # Extract all matches into a list with one matrix element\n  stringr::str_match_all(pattern = \"(?&lt;=mul\\\\()(\\\\d+)(?:,)(\\\\d+)(?=\\\\))\") |&gt;\n  \n  # Use helper formatter\n  to_tibble() |&gt;\n  \n  # Calculate result of the multiplication\n  mutate(result = as.numeric(first) * as.numeric(second)) |&gt;\n  pull(result) |&gt;\n  sum()\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n\nsolution\n\n[1] 182619815\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_3/index.html#part-two",
    "href": "posts/advent_of_code_2024/day_3/index.html#part-two",
    "title": "AOC 2024: Day 3",
    "section": "Part Two",
    "text": "Part Two\nAs you scan through the corrupted memory, you notice that some of the conditional statements are also still intact. If you handle some of the uncorrupted conditional statements in the program, you might be able to get an even more accurate result.\nThere are two new instructions you’ll need to handle:\n\nThe do() instruction enables future mul instructions.\nThe don’t() instruction disables future mul instructions.\n\nOnly the most recent do() or don’t() instruction applies. At the beginning of the program, mul instructions are enabled.\nFor example:\nxmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))\nThis corrupted memory is similar to the example from before, but this time the mul(5,5) and mul(11,8) instructions are disabled because there is a don’t() instruction before them. The other mul instructions function normally, including the one at the end that gets re-enabled by a do() instruction.\nThis time, the sum of the results is 48 (2*4 + 8*5).\nHandle the new instructions; what do you get if you add up all of the results of just the enabled multiplications?\n\ndont_mul &lt;- input |&gt;\n  # Find all the mul()s between a don't() and a do() call\n  stringr::str_extract_all(\n    pattern = \"(?&lt;=don't\\\\(\\\\)).*?(?=do())\",\n    simplify = TRUE\n  ) |&gt;\n  purrr::map_dfr(\n    \\(dont_mul) {\n      dont_mul |&gt;\n        stringr::str_match_all(\"(?:mul\\\\()(\\\\d+)(?:,)(\\\\d+)(?:\\\\))\") |&gt;\n        # Use helper formatter\n        to_tibble()\n    }\n  ) |&gt;\n  \n  # Calculate result of the multiplication\n  mutate(result = as.numeric(first) * as.numeric(second)) |&gt;\n  pull(result) |&gt;\n  sum()\n\nsolution2 &lt;- solution - dont_mul\n\nsolution2\n\n[1] 80747545\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241108/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241108/index.html",
    "title": "This week in R (2024-11-08)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nScrolly moly: Posit have announced the start of a Closeread competition! Closeread is a new Quarto extension that helps you write scrollytelling stories. Scrollytelling is a method (popular with NYT, BBC and others) where concepts are built up or highlighted as the reader scrolls down the page, by zooming, transitioning or altering the visible element on the page as they do. Posit's competition calls for entries on any topic to be submitted by 15th December, with some cool prizes up for grabs.\nDash-ing through Quarto: Posit's Mine Çetinkaya-Rundel has recorded a three part series on Youtube diving into Quarto Dashboards. The functionality has been around for almost a year now and these videos dive into all you can do with them in both R and Python. The second and third videos look at components and theming respectively.\nLucky number S7: a new version of R's latest Object Oriented Programming system - meant to become a successor to S3 and S4 - has been released! Tomasz Kalinowski and Hadley Wickham have written a blog post accompanying this v0.2.0 release. If you were unsure about S7 or had some issues with early releases now is the time to take another look as it starts to be used in more CRAN packages.\nAcross the webR: George Stagg has written a series of blog posts about the current state of WebAssembly in R. Running R in the browser without a server has been one of the hot new areas of development this year and George covers the latest in webR, shinylive and the new Quarto Live extension!\nAction required: it has been confirmed that Github Actions will be removing R from the 'ubuntu-latest' image within a couple of months for \"maintenance reasons\". See the full list of changes here. Luckily R users have great alternatives for using R in Github Actions (or Azure Devops): r2u and r-lib/actions.\nFun fact: did you know, you can use the {usethis} package to setup your global .gitignore with common entries:\n\n\n\nNew versions:\n\n{ntfy} v0.0.6 - an interesting looking newer package which wraps the ntfy.sh lightweight notification service.\n\n\n\n{httr2} v1.0.6 - some fixes and new features for interacting with AWS.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240920/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240920/index.html",
    "title": "This week in R (2024-09-20)",
    "section": "",
    "text": "Happy Friday everyone! After a long hiatus (I took a sabbatical and did some travelling), we're back! Here's some news from the world of R this week - plus a couple of news items from the past 4 months:\n\nVaping comes to R?: a new 'typed superset of R' is being developed and the alpha release is now here. The brainchild of John Coene (of 'Javascript for R' fame), Vapour aims to improve the robustness of R code by using type checking and providing pre-processing like static type checks. Read John's blog post for more info on the reasoning behind it.\nAn IDE, not a Transformer: In June, Posit announced and released into public beta their new IDE - Positron. The product is a fork of VS Code that is aimed at R and Python developers, potentially providing a way for R users to dip their toes in Python's muddy waters by providing some of the home comforts of RStudio in a more generalised IDE. Positron is still in public beta phase so has some growing up to do yet, but early feedback is posit(ron)ive and personally I'm enjoying it for Python development myself!\nMulti-task like a pro: Andres Quintero has recorded a short tutorial on how to get multiple shiny apps running in the same Docker image, using ixpantia's faucet framework for routing and load balancing R applications.\nQuilts, rugs and...plots?: v1.3.0 of the {patchwork} package has now been released, bringing some extra functionality for arranging and composing multiple {ggplot2} plots. One of the key new features is the ability to arrange {gt} tables in the same way. See the tidyverse blog post here.\nShiny in Production: The annual Shiny in Production conference hosted by Jumping Rivers is only a few weeks away, with the speakers and workshops now announced. Next Wednesday (25th September) is your last day to get a ticket so check out the schedule and information here!\nConference season: I've heard from friends and colleagues that both posit::conf(2024) and EARL 2024 were great successes over the past few months, with many interesting and inspiring talks. See the posit::conf website for the dates and location of next year's conference and keep an eye on EARL for news on their next instalment. Also a chance to shout out Jumping Rivers' very helpful list of R conferences.\nFun fact: did you know that the result of your last executed R expression is saved to an internal value? This can come in handy when you forget to assign the result of a long-running function.\n\n\n\nNew package versions:\n\n{rix} v0.11.1 - a relatively new ROpenSci package for using Nix package manager for reproducible builds.\n{httr2} v1.0.4 - bug fixes and improvements to r-lib's package for API interactions\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241129/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241129/index.html",
    "title": "This week in R (2024-11-29)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nBrand new Quarto: earlier this week, Quarto v1.6 was officially released! The new version brings with it some new features for RevealJS presentations, new functionality for landscape content and perhaps most excitingly, support for the brand.yml - a single file that defines branding and styling across formats! Read the release notes here.\nParquet life: ROpenSci have announced their Social Coworking event for January, which is titled 'Working with Parquet in R'. The event will be hosted by Rainer Krug and involve two hours of learning about parquet in a flexible, pressure-free environment! See here for more information on what ROpenSci's Social Coworking events entail.\nAuthRing: Josiah Parry has written up a guide on using OpenID Connect (OIDC) authentication from R. OIDC is based on OAuth 2.0 and the article gives some great practical guidance on how you can use the {httr2} package for integrating with this type of authentication. Josiah does a great job of simplifying a fairly complex subject!\nBluesky ahead: James Balamuta has created a new Quarto extension for seamlessly integrating Bluesky posts into your documents. You can use this to include replies on Bluesky in your Quarto document. As the new social media platform continues to rapidly grow, this new extension provides a great way to encourage discussion and integrate Bluesky into your sites!\nFun fact: did you know base R has functions for solving the birthday problem?\n\n\n\nNew versions:\n\n{usethis} v3.1.0 - vignette and article helpers now support using Quarto.\n\n\n\n{surveydown} v0.5.2 - now supports using cookies to restore survey state.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted to qmd, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241101/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241101/index.html",
    "title": "This week in R (2024-11-01)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nConf Content: the materials from posit::conf(2024) have been released! Over 30 hours of recordings and workshops covering all manner of R-related topics. See the extensive list of content here!\n'Ex'-social media: the last couple of weeks have seen many R users moving their social media presence to BlueSky (mainly from X). Since the demise of Twitter, R enthusiasts have been spread across many different platforms, but it looks like many are starting to concentrate on BlueSky - the Twitter-like interface is probably a factor. Jeremy Allen has also created a starter pack of the best R people to follow, which you can use to easily get started in the community.\nAwesome icons: Jon Harmon has developed a new package {favawesome} for easily adding font awesome icons as favicons in shiny and other HTML pages. If you're developing a shiny app this gives a nice easy way to make your app look a bit more professional and doesn't add any additional dependencies.\nCaRd games: Matt Dray has written a blog post explaining how he used the {sortable} R package to create a card game in shiny. An entertaining read from the man who has championed using R to create games (\"R is a game engine. Fight me.\") - I highly recommend you check it out!\nChromote control: James Balamuta has recorded a video on scraping data from a dynamically generated website using the {chromote} package. This is a very useful tutorial for a common difficult task when trying to scrape data from the web.\nPitching Positron: a new Positron website has appeared with some more information on what Positron is and who it is aimed at. Although it is still very early days and the site is minimal, it does give some background on the IDE and how to get started with it.\nFun fact: did you know, you can infinitely nest environments? Not that you would want to...but it does give some insight into how environments work.\n\n\n\nNew versions:\n\n{duckdb} v1.1.2 - update to v1.1.2 of duckdb, a couple of new features and bug fixes\n{fs} v1.6.5 - some bug fixes to this package that featured in This week in R a couple of weeks ago!\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240308/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240308/index.html",
    "title": "This week in R (2024-03-08)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R:\n\nWeb scraping:  Hadley Wickham gave a talk last night about web scraping using {rvest} and the tidyverse, I'm not sure if it was recorded (can't find anything online) but the slides are here and seem well-developed so might be of interest.\nData editing shiny app:  David Granjon is working on a (still very experimental) package which would allow you to quickly create a shiny app that sits on top of a database and edits it via an app. It’s a pretty common use case for shiny but I imagine generalising it will be hard so I'd be interested to know if any of you dig into it at all!\nwebR:  Colin Fay has continued his series of blog posts looking into {webR} - the latest one discusses the best way to structure a project that interweaves R and JS seamlessly. If you're interested in the development of {webR} and running R in the browser, I'd recommend checking out the rest of his blog posts too.\nOpen source:  Julia Silge & ROpenSci are looking for volunteers to help get involved with testing/developing the {qualtRics} package (something that we at BW currently use). Sounds like it could a good opportunity for someone wanting to dip their toe into open source development.\nFun fact:  Try running the below in R (or replace hello with anything else)…\n\n\n\nNew package versions:\n\n{shinyWidgets} 0.8.2 - added support for dropdown inputs with virtual scroll.\n{renv} 1.0.5 - some minor bug fixes as a follow up to 1.0.4 a couple weeks ago which added some new features.\n\nI'll be looking to start posting updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241122/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241122/index.html",
    "title": "This week in R (2024-11-22)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nYou're a wizard, Quarto: Mickaël Canouil has created a new VS Code extension which helps you to manage your Quarto projects. It includes functionality for installing extensions and creating new documents which may come in handy if you're writing Quarto documents in VS Code (or in future, Positron).\nScouting for bars: David Granjon has developed a new R package {scoutbaR} which wraps the 'scoutbar' React widget. The package makes it easy to include a scoutbar element in your shiny app - an exciting way to modernise and improve your existing shiny apps. Check out the documentation for an example of what it looks like.\nYou Quarto know this: Posit's Charlotte Wickham has published a series of video tutorials focussed around Quarto websites. They cover the basics of setting up a homepage and navigating between pages, to customising with CSS and using the inbuilt listings functionality. If you're looking to create a new website or blog and want to use Quarto to do so, I recommend checking out these tutorials to get started!\nPaLLM of your hand: Simon Couch has developed a new R package {pal} which aims to provide a selection of LLM-backed helpers for completing repetitive tasks in R. One example is an addin that generates roxygen documentation for your functions, giving you a good starting point to build from. Usage of LLMs continues to increase across the board in R!\nLondonR: last week I attended the LondonR meetup, where Hannah Frick gave an excellent talk on the state of the union for {tidymodels}, including the {tailor} and {sparsevctrs} packages. You can see Hannah's slides here, and shout out to Datacove for organising the meetup!\nFun fact: did you know you can use {stringr}s str_view() function to see how your regex pattern matches a string?\n\n\n\nNew versions:\n\n{galah} v2.1.0 - improvements and documentation updates for the very useful biodiversity data package.\n\n\n\n{tinytable} 0.6.0 - internal refactors, bug fixes and consistency improvements to this small, minimalistic table drawing package.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted to qmd, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240503/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240503/index.html",
    "title": "This week in R (2024-05-03)",
    "section": "",
    "text": "Happy Friday everyone! May the 4th be (almost) with you, here's some news from the world of R this week:\n\nDangeR?: researchers at Hidden Layer have found a potential vulnerability in R &lt; 4.4.0, which allows arbitrary code execution when an RDS file is loaded. The exploit involves returning a promise using the headers of the file. The vulnerability is claimed to have been fixed in the latest version of R.\nThe RDS-ponse: the response to the vulnerability mentioned above has been mixed, with many of the opinion that it isn't a vulnerability at all and/or hasn't been resolved in the latest version of R as it is still possible to execute malicious code when an RDS file is read in. The general consensus is that you should always be very wary when reading in RDS files from an unknown source. Bob Rudis has started working on an 'rdaradar' tool for sanity checking unknown R data files - see the README of that project for an explanation of why it might not be considered a vulnerability, and how these types of files can still be used in malicious attacks.\nThey have consequences: Rami Krispin has released a new LinkedIn learning course for setting up automation with Github Actions using both R and Python. It looks to be a great starting point for anyone wanting to automate some tedious or troublesome tasks!\nTidy update: the {tidymodels} team have published a Q1 2024 roundup post, highlighting all the changes to their packages in the first few months of 2024. The article also highlights some of the key changes and new package versions.\nFun fact: did you know Florian Rupprecht has a Github site for tracking incoming CRAN packages? You can use it to see packages which have been submitted to CRAN and where they are in the approval process.\n\n\n\n\nScreenshot of the CRAN package submission checker at CRAN sub tracker (nx10.github.io)\n\n\n\nNew package versions:\n\n{nanonext} 1.0.0: Charlie Gao has - with contributions from Joe Cheng - released the first major version of this exciting package, which includes integration with {later}.\n{webR} 0.3.3: improvements to version identification and bug fixes.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241004/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241004/index.html",
    "title": "This week in R (2024-10-04)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nTricks and Treats: as part of Hacktoberfest, Jonathan Carroll has created a repository aimed at helping R users get started with Github and open source by providing a {safespace} for them to try creating pull requests. If you've ever wanted to get started with Github or open source but weren't sure where to start, check out his blog post here.\nMonopoly skills: Etienne Bacher has written a blog post explaining property-based testing in R, using the {quickcheck} package. This kind of testing integrates seamlessly with {testthat} and is useful to know as an alternative way to approach unit tests!\nHardcore Parquet!: Ted Laderas has published an introduction to using parquet and DuckDB to get blistering fast results on large datasets. I think this combination could well be the future of large dataset manipulation in R and Ted gives a good introduction, using quarto-live to include runnable chunks of R code!\nA Shiny future: Jasmine Daly has written up a forecast for what will be the biggest trends in Shiny development in 2025. I have to say I agree on the whole, particularly that we'll see more serverless apps with {shinylive} and more large data manipulation with {duckdb}.\nCovering all bases: Posit have produced an article outlining the best way to connect to DuckDB, Snowflake or Databricks databases, in both R and Python. Very useful if you are using any of these DBMSs in an enterprise setting.\nClean up the books: R-Consortium's latest Tidy Finance webinar is next Wednesday 9th October, and will cover evaluating performance with the Capital Asset Pricing Model in R. You can sign up to the webinar here.\nFun fact:  did you know, base R has functionality for working with Roman numerals...\n\n\n\nNew versions:\n\nvapour v0.0.6 - the latest release of the new 'typed superset of R' contains various bug fixes and features.\n{targets} v1.8.0 - several updates in this latest version of the hugely popular pipelines package.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240322/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240322/index.html",
    "title": "This week in R (2024-03-22)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R:\n\nFair ML: the tidymodels team released some new functionality this week centred around increasing fairness in statistical models. It involved some updates to {yardstick} and {tune} - see the blog post for more details. Another good sign for tidymodels users that the ecosystem is heading in the right direction.\nWet testing: Maelle Salmon has written up an overview of an ROpenSci training session, explaining two useful acronyms to remember: DRY (Don't Repeat Yourself) and DAMP (Descriptive and Meaningful Phrases), specifically in application to writing tests for an R package. Definitely worth a read for any R users who are newer to writing tests - or writing code in general! Maelle has also written a great update on the state of mocking for R package testing this week, which I also recommend checking out.\nQuarto, webR + shinylive:  James Balamuta has developed a tutorial giving an example of how to integrate both {quarto-webr} and {quarto-shinylive} Quarto extensions into the same document. This is a very cool look at the future of browser-based R and for me brings to life the possibilities - particularly around learning/teaching. The document itself can be seen here, hosted on James' website.\n(En)coding:  Gábor Csárdi's R Encoding FAQ repository has had some minor updates this past week. If you have ever run into an error in your code that has taken days to resolve, and when you resolve it you feel like you still don't know why, and that error has been related to encoding (I'm speaking from experience here, if you hadn't guessed) - then I highly recommend bookmarking this repository and taking a look at some of the resources.\nFun fact:  what would you expect the output of the two lines below to be? Run them and see for yourself...\n\n\n\nNew package versions:\n\n{zstdlite} 0.2.7 - a newer package from Mike (@coolbutuseless) which uses the C-based zstd library for fast and configurable (de/)serialisation of R objects. Possibly a better alternative to saveRDS()/readRDS() in some cases.\n{mirai} 0.13.1 - a fix for working with {targets} and customisation of serialisation.\n\nI'll be posting updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240419/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240419/index.html",
    "title": "This week in R (2024-04-19)",
    "section": "",
    "text": "Happy Friday everyone! Some more news from the world of R this week:\n\nAstronomical docs: R-universe have been accepted as a Google Season of Docs 2024 project. This means they have secured funding to supercharge their documentation, including developing a new Quarto site to help people get started. As a fan of R-universe and ROpenSci I can’t wait to see what Maëlle and the team come up with. See their proposal here.\nPolars bears: the {polars} R package has had a new release, which comes with a lot of refactoring and renaming to bring it more in line with its Python equivalent. If you don’t know it, {polars} is a package written in Rust with a Python-like syntax for fast, efficient data manipulation.\nCloud goddess:  Thomas Sandmann has written an interesting blog post about his experience of interacting with AWS S3 storage and the AWS Athena service using the {paws} and {noctua} R packages respectively.\nTables and chairs:  Posit have announced the start of their 2024 Table Contest. Between now and the deadline of 31st May, R and Python developers will be creating many beautiful, useful, informative tables - if you work with tables or data visualisation I’d encourage you to think about submitting too!\nMore learning: ShinyConf finishes today and if you’re in the mood for more and based in London, check out SatRdays next Saturday 27th. One talk that I think looks very interesting is Charlie Gao talking about using {mirai} in Shiny and Plumber applications.\nFun fact: every R version since 2011 has been named after a reference from the Peanuts comic strip. See here for the origin of the name for R 4.3.3 (Angel Food Cake).\n\n\n\n\nAI generated image combining 'Angel Food Cake' and 'peanuts'...\n\n\n\nNew package versions:\n\n{reticulate} 1.36.0 - lots of bug fixes and updated default Python version.\n{bagyo} 0.1.1 - first CRAN release of a new data package containing tropical cyclone data, useful for demo visualisations.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "All articles",
    "section": "",
    "text": "📌 Intro to the blog\n\n\n\n\n\n\nintro\n\n\n\nHello and welcome to the new home for everything I write!\n\n\n\n\n\nNov 11, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nAOC 2024: Day 6\n\n\n\n\n\n\nrstats\n\n\nadvent of code\n\n\n\nDay 6 of the Advent of Code 2024: ‘Guard Gallivant’\n\n\n\n\n\nDec 6, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nAOC 2024: Day 5\n\n\n\n\n\n\nrstats\n\n\nadvent of code\n\n\n\nDay 5 of the Advent of Code 2024: ‘Print Queue’\n\n\n\n\n\nDec 5, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nAOC 2024: Day 4\n\n\n\n\n\n\nrstats\n\n\nadvent of code\n\n\n\nDay 4 of the Advent of Code 2024: ‘Ceres Search’\n\n\n\n\n\nDec 4, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nAOC 2024: Day 3\n\n\n\n\n\n\nrstats\n\n\nadvent of code\n\n\n\nDay 3 of the Advent of Code 2024: ‘Mull It Over’\n\n\n\n\n\nDec 3, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nAOC 2024: Day 2\n\n\n\n\n\n\nrstats\n\n\nadvent of code\n\n\n\nDay 2 of the Advent of Code 2024: ‘Red-Nosed Reports’\n\n\n\n\n\nDec 2, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nAOC 2024: Day 1\n\n\n\n\n\n\nrstats\n\n\nadvent of code\n\n\n\nDay 1 of the Advent of Code 2024: ‘Historian Hysteria’\n\n\n\n\n\nDec 1, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-11-29)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nQuarto v1.6 released with an exciting new features; integrate BlueSky with your Quarto website; learn Parquet with ROpenSci and get started with OIDC in R!\n\n\n\n\n\nNov 29, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-11-22)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nMultiple developments in the world of Quarto; yet more LLM integration in R; a brand new widget for your shiny apps and the latest from LondonR!\n\n\n\n\n\nNov 22, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-11-15)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nAutopsies on shinylive applications; a new unified framework for branding in Quarto and Shiny; reflections on contributing to R Core; and some H.P. Lovecraft!\n\n\n\n\n\nNov 15, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-11-08)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nNew Posit Quarto competition with prizes up for grabs; the latest in OOP in R; developments in WebAssembly usage across R and everything Quarto Dashboards!\n\n\n\n\n\nNov 8, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-11-01)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week: an R user BlueSky migration; posit::conf(2024) materials; favicons in shiny apps; card games in R; dynamic web scraping and a new Positron site!\n\n\n\n\n\nNov 1, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-10-25)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: Shiny Contest 2024 winners announced; a new Quarto extension for callouts; project management in data science and some updates from ROpenSci!\n\n\n\n\n\nOct 25, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-10-18)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week: a look at the new Positron IDE; including data in R packages; a look ahead to R/Pharma 2024; an introduction to Monads; and Quarto rendering tips!\n\n\n\n\n\nOct 18, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-10-11)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: AI comes to Shiny development; DuckDB is still blisteringly fast; my reflections on an excellent Shiny in Production conference, and more!\n\n\n\n\n\nOct 11, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-10-04)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: Hacktoberfest begins; how to use the trendiest data tools like Parquet and DuckDB and a look ahead to the Shiny apps of 2025!\n\n\n\n\n\nOct 4, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-09-27)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: learn about S7, R-Universe and the latest RStudio release!\n\n\n\n\n\nSep 27, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-09-20)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nHappy Friday everyone! After a long hiatus (I took a sabbatical and did some travelling), we’re back! Here’s some news from the world of R this week - plus a couple of news items from the past 4 months: Vaping comes to R?: a new ‘typed superset of R’ is being developed and the alpha release is now h\n\n\n\n\n\nSep 20, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-05-03)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: a claimed vulnerability in R &lt; 4.4.0 and the response to its announcement; a new Github Actions course; tidymodels updates and more!\n\n\n\n\n\nMay 3, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-04-26)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: the newly released R 4.4.0; an awesome new Quarto extension; looking back at ShinyConf and ahead to posit::conf(); and more!\n\n\n\n\n\nApr 26, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-04-19)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: exciting news for R-universe; {polars} continues solidifying its presence in R; cloud storage tutorials and some upcoming events!\n\n\n\n\n\nApr 19, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-04-12)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in the world of R - new benchmarking increases {duckplyr} excitement; the future of R-hub is here; plus new versions of key packages are released!\n\n\n\n\n\nApr 12, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-04-05)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in R: DuckDB collab with Posit on an exciting new project, updates from the {tidymodels} team and some useful new guides and tutorials!\n\n\n\n\n\nApr 5, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-03-22)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in the world of R, including: increasing fairness in machine learning; package testing best practices and browser-based R! 💥\n\n\n\n\n\nMar 22, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-03-15)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nThis week in the world of R: high performance computing with {nanonext} et al., the new {tidyfinance} package and more of the latest updates!\n\n\n\n\n\nMar 15, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\n5 tips for enterprise Shiny apps\n\n\n\n\n\n\nrstats\n\n\nshiny\n\n\ntips\n\n\n\nSome nuggets of wisdom from our experience of developing R shiny applications for hundreds of users\n\n\n\n\n\nMar 12, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\n\n\n\n\n\n\nThis week in R (2024-03-08)\n\n\n\n\n\n\nrstats\n\n\nthis week in r\n\n\n\nSome news this week from the world of R: web scraping with {rvest} and tidyverse; shiny apps for data editing; webR/JS developments and more!\n\n\n\n\n\nMar 8, 2024\n\n\nChris Brownlie\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "📌 Intro to the blog",
    "section": "",
    "text": "Ahoy\nHello there, this is my new blog! 👋 I hope you find something interesting or useful here, but don’t hold your breath 😀\nMy reasoning for setting this up is threefold:\n\nI’ve been posting ‘This week in R’ on LinkedIn for a while now, but wanted them to also be hosted somewhere they are easier to navigate (i.e. so if you miss a few weeks you can quickly scan back over them).\nI want to start writing some more different types of code-based articles, so LinkedIn isn’t a viable option if I want to keep everything in one place.\nI’m planning to update my personal site and want to embed this blog in there, for funsies.\n\n\n\nMe, myself and I\nI’m an Analytics Consultant/Data Scientist/{insert job title that will ‘soon be replaced by AI’}, working in the UK. I use R for my work and many of the posts here will use R, but my area of interest and expertise lies in data-based web applications. By which I mean, web apps that have the primary use of analysing, visualising, or accessibilising (?) data.\nIn my current day job I primarily do this using R Shiny (which I am a big fan and proponent of), but I also use Python-based frameworks like FastAPI, Streamlit and Shiny for Python. Naturally all of this web app work comes with some Javascript, Typescript and UI/frontend frameworks (although I’ll admit I am slightly less at home with these than I am with R or Python, I am not a front-end developer :shivers:)."
  },
  {
    "objectID": "posts/5_tips_for_enterprise_shiny_apps/index.html",
    "href": "posts/5_tips_for_enterprise_shiny_apps/index.html",
    "title": "5 tips for enterprise Shiny apps",
    "section": "",
    "text": "Developing a web application is easy, developing a good web application is hard, developing a good enterprise web application is even harder. Once you start building applications that are intended for more than a handful of users, you start having to worry more about things like performance, activity logging, branding and a hundred other things that you didn’t need to care about before.\n \nIn this article, I'll give some tips and best practices for developing enterprise Shiny applications. Lessons that we (the MDA team at Barnett Waddingham) have learned in developing shiny apps for hundreds of users.\n\nTip 1: UPS (Use Packages, Stupid)\n\n\n\nimage\n\n\nYour app should either be an R package and/or use an opinionated framework like golem, Rhino or leprechaun (pick your creature of choice). Please, please, please don't develop your app as a single app.R file, or I will come into your office and SET YOUR COMPUTER ON FIRE. I would strongly recommend you structure your app as a package, which has a plethora of benefits that have already been explained by others with more street cred than I. The key point being that you can leverage existing functionality in packages like {devtools} to significantly streamline your development process.\n\n\nTip 2: Big Brother knows best\nYou should be tracking user activity, if nothing else so you can check that people are actually using your app. At Barnett Waddingham we’ve developed an in-house solution which utilises the excellent {logger} R package to enable simultaneous logging to Azure Log Analytics platform, Azure SQL Server and text log files. We have recently extended this using {callr} to run the logging asynchronously in a background process, meaning that logging everything our users do has a negligible impact on the performance of the app. Besides, how else are we going to create the one algorithm to rule them all?\n\n\nTip 3: Always judge a web app by its cover\nPeople will judge your app on how it looks. Even for users who are not familiar with it, the default look and feel of a shiny app can seem tired, boring and a bit outdated (although the recent UI refresh has helped). You should pick a UI framework and utilise it to the max, whether you take advantage of {bslib} and use the latest UI gadgets from Bootstrap, or pick a framework like React or Vue, or even if you're a hardcore front-end developer and write all your own classes and styles (i.e. you enjoy pain) - you should be spending a fairly significant amount of time making sure your app looks: (a) nice, (b) consistent with your brand, (c) modern and (d) even nicer.\n\n\nTip 4: Meticulously Maintained Modules Make Me Merry\n\n\n\nimage\n\n\nAs I mentioned before, using a single app.R file is liable to lead to pyrotechnics - but the same can be said for any R file that is thousands of lines long (I have seen a fair few in my time, and the pain of debugging them is burned deep into my soul). One of the best ways to avoid this torment yourself is to learn to use Shiny modules early on and use them well. You should have a consistent naming convention for your modules and files, as well as following the philosophy of separation of business logic and shiny logic.\n\n\nTip 5: Not another fancy futile flop\nWho is your audience? If your app doesn't solve a problem, nothing else matters - not even how cool it looks. One of the beautiful things about shiny is that you can quickly prototype and share with others to get feedback early on. I don't want to be too controversial, but if you are developing an app for a particular group of people in a commercial setting, I'm going to suggest you...talk to them (*shocked pikachu*). Find out what exactly they will gain from your app, focussing on the underlying jobs and tasks they do rather than what they tell you they want the app to do. This above all else is the key differentiator between an enterprise shiny app and a good enterprise shiny app - the technology and underlying code can almost always be improved, but if the app doesn't meet the customers' needs, it may as well be a flying, invisible toothbrush.\n\n\n\nimage\n\n\nThese 5 tips are somewhat subjective but are based on my experience developing these kinds of apps. If you have any questions or found this useful, feel free to drop me a message letting us know what you liked or hated about these here words, and feel free to follow as I'll be posting more about developing with R and Shiny in an enterprise setting in the coming weeks and months!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241018/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241018/index.html",
    "title": "This week in R (2024-10-18)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nHello Positron: Julia Silge has released a video introducing Positron, the new IDE from Posit which is a fork of VSCode. In the screencast Julia shows the key parts of the IDE using a TidyTuesday dataset on orcas. If you've been wondering about Positron since it went into public beta then check out the video!\nGive me data: Yohann Mansiaux has written a blog post detailing the ways you can include data in your R package, and why you should do so! This is an often overlooked element of R package development and Yohann gives a good overview of the topic.\nPharmers Unite: R/Pharma 2024 starts next week and they have announced the 19 free workshops that will be delivered over the course of the event. These workshops will be recorded and released on Youtube at a later point. I highly recommend you check out the list as many of them will be invaluable to all R developers, not just those in pharma. You can also still register for the event here for free!\nRight in the monads: Jonathan Carroll has published a blog post exploring the world of monads! The complex statistical concept is very important in computing and Jonathan provides an accessible introduction with examples in R, as well as introducing a new {monads} package to help with exploring the topic.\nQuarto to go: Pete Jones has written a blog post explaining how to resolve a specific but potentially very irritating issue with rendering Quarto outputs to a different folder than the source directory. If you've ever tried to render to a specific output location and not been happy with the results, give Pete's post a read!\nFun fact: of the more than 14,000 packages on CRAN that depend on a minimum R version, v3.5.0 is the most common with nearly 3,000 packages requiring it. Additionally, 3.x.x is the most common required major version (63% of the 14k) and three packages have a minimum R version requirement of 0.x!\n\n\n\nNew versions:\n\n{openxlsx2) v1.10 bug fixes and some new features for the 'swiss knife for working with openxml formats'.\n{shiny.telemetry} v0.3.1 - Appsilon's shiny logging package gets a new log_errors method and some bug fixes.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241025/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241025/index.html",
    "title": "This week in R (2024-10-25)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nShiny gold medals: Posit have announced the winners of the 2024 Shiny Contest. Congratulations to the winners David & Maxime, their app submission 'Curbcut' is a very impressive, complex and complete shiny app - and a great example of everything that is possible with shiny. Congratulations to all the runners up (my favourite is 'Oh my bag!') and honourable mentions too!\nCalling out Quarto: James Balamuta has developed a new Quarto extension for adding custom callouts to your document. You can specify how the new callout type should look in your _quarto.yml file and then reuse them throughout your document! Currently only available for HTML outputs but definitely looks useful.\nNot R but still R: Jumping Rivers have released the first video from the London SatRdays meetup back in April. The first talk is from Andrie de Vries talking about project management in data science. Although Andrie himself says the talk is not about R, I've included it as it is a useful (perhaps underappreciated) topic that us R developers should be thinking about!\nSpaceships and rockets: ROpenSci have updated the documentation for the R-Universe API, and Maëlle and Jeroen have also developed a new R package to simplify accessing it. The package isn't yet on CRAN but you can see it and install it from Github here. The package has functions for opting into to a universe and extracting data on packages.\nGet involved: ROpenSci have announced some new activities aimed at people wanting to make their first contribution to open source software! They will be organising a community call in January and a mini hackathon to help people get over the intimidation of their first contribution. They are currently looking for maintainers of ROpenSci packages to help get involved.\nFun fact: did you know, since R v4.0.0 you can specify raw strings in base R using the r\"( notation? This can make it easier to use both single and double quotes in the same string.\n\n\n\nNew versions:\n\n{duckdb} v1.1.1.9001 - (on R-universe, soon to be on CRAN) new feature to interrupt long-running queries in RStudio with Ctrl+C.\n{drat} 0.2.5 - some small updates to Dirk Eddelbuettel's package for managing local R package repositories.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240315/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240315/index.html",
    "title": "This week in R (2024-03-15)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R:\n\nRStudio & Docker: Rami Krispin has published a tutorial on running RStudio Server inside a Docker container. A great starting point for any R users wanting to learn more about Docker and the images that the Rocker project provides.\nFast statistics: Sebastian Krantz has written an article about his package {collapse}, which aims to provide fast, efficient data manipulation and statistics via C/C++. An intriguing package that I haven't delved into myself, but is growing in popularity and well-maintained - v2.0.11 was released 4 days ago.\nFinancial economics:  Christoph Scheuch et al. have released the first version of their new {tidyfinance} package onto CRAN, providing helper functions for approaching economics and finance in a tidyverse framework.\nHigh performance parallel computing: this blog post discusses a group of packages I've been keeping my eye on which are built on {nanonext}, a binding to the state of the art C library 'NNG' (Nanomessage Next Generation). Packages like {mirai} and {crew} have built on this and are starting to create an exciting ecosystem of packages for efficient, elegant parallel computing.\nOpen source:  ROpenSci have released a new version of their dev guide - this blog post discusses the latest changes including improvements to packaging and Github guidance, as well as a Spanish translation and other improvements.\nFun fact:  Try running the below in R\n\n\n\nNew package versions:\n\n{arrow} v15.0.1 - the latest release includes bindings for additional base R functions.\n{xxhashlite} v0.2.2 - a newer package which provides fast hashing of objects via the 'xxHash' C library.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241011/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241011/index.html",
    "title": "This week in R (2024-10-11)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nA Shiny new Assistant: Posit have released Shiny Assistant, an instance of the Claude 3.5 Sonnet LLM which is specialised in Shiny app development in both R and Python. Read the announcement here and play around with assistant here.\nFunky file systems: Danielle Navarro has written a very entertaining blog post about {fs}and why it is an underappreciated package in R data science workflows. If you are using file paths at all or developing and deploying on different OS', you should definitely read it!\nDuck Duck loose: Stephen Turner has written a blog post comparing DuckDB to base R and {readr}/{dplyr}, and found DuckDB to be 125x faster than base R! The post includes some information about {duckplyr}, the package for interacting with DuckDB using {dplyr}-like syntax.\nTinker Tailor: The tidymodels team have announced the latest addition to their ecosystem - {tailor}. This new package \"is to postprocessing as {recipes} is to preprocessing\" and is something that has been highly anticipated. The package is not yet on CRAN but you can check out the Github here.\nShiny in Production: I attended another excellent conference in Newcastle this week, congrats to Jumping Rivers and all the sponsors and speakers for putting on a great event. Some personal favourites were: 🌞 Tan Ho's reflections on a large-scale shiny app project; Gareth Burns' journey using shiny as an interactive education tool; Alasdair Morgan's lightning talk on correcting resource usage on Posit Workbench, and Katy Morgan's discussion on integrating Gen AI into an auditing shiny app. Talks were recorded and next year's instalment of the conference has already been confirmed so keep an eye out here for announcements.\nFun fact:  did you know, there were 1203 downloads of R versions 3.x.x or even 2.x.x from the RStudio CRAN mirror in the last 30 days?! Thankfully that only accounts for less than 0.2% of all R downloads in that time period.\n\n\n\nNew versions:\n\n{data.table} v1.16.2 the latest release of the super fast table package includes various bug fixes.\n{mirai} v1.3.0 - the exciting async package adds some new features for working with daemons and other bug fixes.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240927/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240927/index.html",
    "title": "This week in R (2024-09-27)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nOOPs, I did it again: Veerle Eeftink-van Leemput has written a blog post which is a great introduction to the newest of R's Object Oriented Programming frameworks: S7. A successor to S3 and S4, there are long term plans to integrate S7 into base R so its definitely something worth knowing about!\nNew RStudio version: the new version of RStudio IDE was released this week (2024.09.0 \"Cranberry Hibiscus\"). See here for an overview of what's new and here for the full list of bug fixes.\nExploring our universe: ROpenSci had a community call this week, in which Jeroen Ooms talked about R-Universe, how it has developed and how you can use it today - watch the recording here. I think R-Universe could well be the future of sharing open source packages, so its worth checking out.\nInteractivity ftw!: Sherry Zhang & Dianne Cook have written a new CRAN task view for Dynamic Visualizations and Interactive Graphics. As with other task views, it is the perfect place to start if you have a problem relating to plotting an interactive graphic!\nGet out, liers: Steven Sanderson has written a blog post explaining how to go about removing outliers from a dataset. This is a good place to start if you're unsure how to about detecting and removing outliers in your data.\nQuiz time: do you know the answer to these questions? Answers at the bottom of the page!\n\n1) What does the C in CRAN stand for?\n2) In what year was R v4.0.0 released?\n3) To the nearest thousand, how many R packages are currently available on CRAN?\n\nNew package versions:\n\n{surveydown} 0.3.0 - a significant API overhaul for the markdown based survey package\n{renv} v1.0.9 - a couple of bug fixes, following from a larger v1.0.8 release last week.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\n\n(Answers to the quiz questions - spoilers ahead!)\n1) Comprehensive\n2) 2020\n3) At the time of publishing (10.30am on 27th September 2024), there are 21,420 packages on CRAN. Congrats if you said 21k!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240405/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240405/index.html",
    "title": "This week in R (2024-04-05)",
    "section": "",
    "text": "Happy Friday everyone! After a short Easter hiatus, here's some news from the world of R this week:\n\nQuack quack: in some very exciting news, DuckDB have teamed up with the good folk at Posit and developed {duckplyr}, enabling integration of DuckDB into a tidy R workflow. This could prove to provide significant performance boosts in future and is just all-round a pretty cool project!\nTidy survival: the {tidymodels} team have released yet another update, this time providing functionality for performing survey analysis. See the blog post here for more info.\nShiny shared states:  Jacob Sobolewski has written an interesting blog post proposing another way to share state between Shiny modules - an alternative to the relatively well established methods of return values and using {R6} classes. He takes inspiration from React and although this method won't be for everyone it is cool to see people come up with novel solutions to the problem of state-sharing in a shiny app.\nDive into packages:  Mohsen Asgari has written a guide for how to get started with creating packages in R. In particular, he focusses on creating a package that contains one or more shiny apps.\n12 sleeps: with less than 2 weeks to go, the ShinyConf agenda has been released. There's still time to register if you haven't already!\nFun fact:  in the two weeks since my last update, 527 new package versions have been published to CRAN...\n\n\n\nNew package versions:\n\n{shinyWidgets} 0.8.4 - bug fixes and new widgets including WinBox() for managing multiple windows.\n{bslib} 0.7.0 - many bug fixes and new input_task_button() widget.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240426/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240426/index.html",
    "title": "This week in R (2024-04-26)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nFor 4.4 on 24-4-24: a new version of R is here! The release of 4.4.0 finished on Wednesday. Some notable new features include: an experimental new feature for tail-call optimisation; the addition to base R of the useful %||% operator which previously only existed in {rlang} and a new pkg2HTML() function for creating single-page reference manuals for R packages. See the full list of changes here, or Jumping Rivers’ Russ Hyde’s writeup of the key changes here.\n\n\n\nQuarto embedding: James Balamuta has developed a Quarto extension called embedio, which allows you to easily incorporate different file types into Quarto HTML documents. This looks to be very useful for embedding slides or PDF documents into Quarto documents or websites.\nDucks in a row: another week, another benchmark showing that {duckplyr} is blisteringly fast compared to the current most popular data manipulation packages. This time Tim Taylor compared it to {data.table} and as you will see in the write-up, there was little competition in terms of speed.\nDBI Q&A: R-consortium published a Q&A with Kirill Muller - the author of {DBI} - including his thoughts on the future of databases and R. Read the conversation here.\nPosit-ively excited: the agenda for posit::conf(2024) has now been released. The conference in August has more than 60 sessions across the 3 days and looks like it will be a great networking and learning opportunity for those that attend.\nShinyConf success: ShinyConf 2024 was a great event, with many excellent speakers and interesting topics! A personal favourite of mine was Deepansh Kurana's talk 'How I Built an API for my life' - very interesting and a great use case for {plumber}, {shiny} and more! You can read more about his project on his Github here.\nQuiz: how well do you know your Date-a types in R? Which of the below will throw an error, and what will the others return? Try for yourself to see if you got it right...\n\n\n(On that last one, see here for more info)\n\nNew package versions:\n\n{xlcharts} 0.0.2 - first releases of a new package from Félix Luginbühl for creating native Excel charts.\n{shinyWidgets} 0.8.6 - bug fixes and dependency updates\n\nI post updates like this every Friday so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20240412/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20240412/index.html",
    "title": "This week in R (2024-04-12)",
    "section": "",
    "text": "Another Friday, another R-eview! Here's some news from the world of R this week:\n\nQuick quack: Art Steinmetz published an interesting article looking at the various different tidyverse wrappers around powerful database engines, as a solution for working with large data in the tidyverse. The results are in and the new {duckplyr} wrapper around DuckDB seems to blow the competition out of the water in terms of speed.\nCatching the worm: early bird tickets for EARL (Enterprise Applications of the R Language) conference in Brighton this September have been released this week. See here for more information including the keynote speakers.\nDatabases:  Hadley Wickham has written a release article for {dbplyr} v2.5.0 which was released last month. The new release contains improvements to syntax for specifying tables as well as some minor improvements to SQL generation.\nR-hub evolution:  Gabor Csardi has announced that R-hub is being retired in favour of the sparkly new modernised R-hub v2. This new iteration of R-hub is built on Github Actions and Gabor's article here explains how to move from v1 to v2.\nQuiz: what will be the output of the two lines of code below, and why? Try it yourself and find out!\n\n\n\nNew package versions:\n\n{webr} 0.3.2 - additional features and bug fixes\n{renv} 1.0.7 - a whole bunch of bug fixes\n{pkgdown} 2.0.8 - updating {bslib} compatibility and newer bootstrap features\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/this_week_in_r/this_week_in_r_20241115/index.html",
    "href": "posts/this_week_in_r/this_week_in_r_20241115/index.html",
    "title": "This week in R (2024-11-15)",
    "section": "",
    "text": "Happy Friday everyone! Here's some news from the world of R this week:\n\nPeeky-boo: James Balamuta's latest R package {peeky} helps you extract, examine, and run the source code of Shinylive applications. The functionality reiterates the idea that in Shinylive applications \"there are no secrets\". You can check out the package on Github and start dissecting shinylive apps yourself!\nBrand(.yml) new: the next edition of Quarto will support brand.yml - a concept from Posit which allows you to specify brand guidelines for logos, colours, fonts, plots and more in a single _brand.yml file which can then be reused across your R, Python and Quarto projects! Currently it is only supported in Shiny for Python, but with it being added to the prelease version of Quarto and planned for R Shiny in the near future it looks to be a useful addition to the Posit suite of tools.\nBricks and mortar: the {brickster} package for interacting with Databricks is now on CRAN! Produced by the Databricks labs team, the package provides a toolkit for interacting with some of the Databricks APIs and provides different options for running code against Databricks from within R.\nDev-ing deep: Heather Turner has written a blog post reflecting on the R Dev Day that ran alongside Shiny in Production 2024 last month. The article gives a very interesting insight into how the day works and how bugs are fixed and new R features developed, as well how to get involved at next years conference.\nLove your craft: Sergej Ruff has release a new R package on Github - {lovecraftr} - which contains the text from H.P. Lovecraft's most well-known stories, in an easily accessible format. This looks to be a great resource for anyone looking to test out their text analysis skills on a new dataset!\nQuiz: how well do you know your NAs? Guess what each of the below lines will return, then test it yourself to find out! Let me know your score out of 8!\n\n\n\nNew versions:\n\n{reticulate} v1.40.0 - includes support for Python 3.13, among other changes and additions.\n\n\n\n{curl} 6.0.0 - new features, bug fixes and dependency updates.\n\nI post updates like this every week so if you're interested feel free to follow. Comment below if there's something interesting you found out this week too!\nThis was originally posted on Linkedin here and automatically converted, so may contain some formatting issues"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_6/index.html#day-4-guard-gallivant",
    "href": "posts/advent_of_code_2024/day_6/index.html#day-4-guard-gallivant",
    "title": "AOC 2024: Day 6",
    "section": "Day 4: Guard Gallivant",
    "text": "Day 4: Guard Gallivant\nThe Historians use their fancy device again, this time to whisk you all away to the North Pole prototype suit manufacturing lab… in the year 1518! It turns out that having direct access to history is very convenient for a group of historians.\nYou still have to be careful of time paradoxes, and so it will be important to avoid anyone from 1518 while The Historians search for the Chief. Unfortunately, a single guard is patrolling this part of the lab.\nMaybe you can work out where the guard will go ahead of time so that The Historians can search safely?\nYou start by making a map (your puzzle input) of the situation. For example:\n....#.....\n.........#\n..........\n..#.......\n.......#..\n..........\n.#..^.....\n........#.\n#.........\n......#...\nThe map shows the current position of the guard with ^ (to indicate the guard is currently facing up from the perspective of the map). Any obstructions - crates, desks, alchemical reactors, etc. - are shown as #.\nLab guards in 1518 follow a very strict patrol protocol which involves repeatedly following these steps: - If there is something directly in front of you, turn right 90 degrees. - Otherwise, take a step forward.\nFollowing the above protocol, the guard moves up several times until she reaches an obstacle (in this case, a pile of failed suit prototypes):\n....#.....\n....^....#\n..........\n..#.......\n.......#..\n..........\n.#........\n........#.\n#.........\n......#...\nBecause there is now an obstacle in front of the guard, she turns right before continuing straight in her new facing direction:\n....#.....\n........&gt;#\n..........\n..#.......\n.......#..\n..........\n.#........\n........#.\n#.........\n......#...\nReaching another obstacle (a spool of several very long polymers), she turns right again and continues downward:\n....#.....\n.........#\n..........\n..#.......\n.......#..\n..........\n.#......v.\n........#.\n#.........\n......#...\nThis process continues for a while, but the guard eventually leaves the mapped area (after walking past a tank of universal solvent):\n....#.....\n.........#\n..........\n..#.......\n.......#..\n..........\n.#........\n........#.\n#.........\n......#v..\nBy predicting the guard’s route, you can determine which specific positions in the lab will be in the patrol path. Including the guard’s starting position, the positions visited by the guard before leaving the area are marked with an X:\n....#.....\n....XXXXX#\n....X...X.\n..#.X...X.\n..XXXXX#X.\n..X.X.X.X.\n.#XXXXXXX.\n.XXXXXXX#.\n#XXXXXXX..\n......#X..\nIn this example, the guard will visit 41 distinct positions on your map.\nPredict the path of the guard. How many distinct positions will the guard visit before leaving the mapped area?\n\nlibrary(stringr)\nlibrary(purrr)\nlibrary(tibble)\nlibrary(rlang)\n\n\nAttaching package: 'rlang'\n\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\n# Read input into tibble\ninput &lt;- readr::read_lines(\"input.txt\") |&gt;\n  str_split(\"\") |&gt;\n  map_dfr(\\(x) {\n    x |&gt; \n      set_names(str_c(\"col_\", 1:length(x))) |&gt; \n      as_tibble_row()\n  })\n\n# helper functions\nwithin_bounds &lt;- function(location, limit_df) {\n  if (any(dim(limit_df)-location &lt; 0) || \n      any(location &lt; 1)) return(FALSE)\n  TRUE\n}\nturn &lt;- function(d) c(d[2], -d[1])\n\n# Identify start location\nloc_col &lt;- map_lgl(input, \\(col) any(col == \"^\")) |&gt; set_names(NULL) |&gt; which()\nloc_row &lt;- pmap_lgl(input, \\(...) any(list(...) == \"^\")) |&gt; which()\n\n# Initialise variables\nmap &lt;- input\nlocation &lt;- c(loc_row, loc_col)\ndirection &lt;- c(-1,0)\n\n# Loop while the next location is still on the map\nwhile(within_bounds(location + direction, map)) {\n  \n  # Look at the next step and see what it is\n  new_location &lt;- location + direction\n  look &lt;- map[new_location[1], new_location[2]]\n  \n  # If obstacle, turn and try again (keeping same location)\n  if (look == \"#\") {\n    direction &lt;- turn(direction)\n    next\n  }\n  \n  # If steppable, mark current square as done and move\n  if (look == \".\"|look == \"X\") {\n    map[location[1], location[2]] &lt;- \"X\"\n    map[new_location[1], new_location[2]] &lt;- \"^\"\n    location &lt;- new_location\n    next\n  }\n}\n\n# Count stepped locations, plus 1 as the final location isn't marked on the map\nsum(map == \"X\") + 1\n\n[1] 5153"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_6/index.html#part-two",
    "href": "posts/advent_of_code_2024/day_6/index.html#part-two",
    "title": "AOC 2024: Day 6",
    "section": "Part Two",
    "text": "Part Two\nWhile The Historians begin working around the guard’s patrol route, you borrow their fancy device and step outside the lab. From the safety of a supply closet, you time travel through the last few months and record the nightly status of the lab’s guard post on the walls of the closet.\nReturning after what seems like only a few seconds to The Historians, they explain that the guard’s patrol area is simply too large for them to safely search the lab without getting caught.\nFortunately, they are pretty sure that adding a single new obstruction won’t cause a time paradox. They’d like to place the new obstruction in such a way that the guard will get stuck in a loop, making the rest of the lab safe to search.\nTo have the lowest chance of creating a time paradox, The Historians would like to know all of the possible positions for such an obstruction. The new obstruction can’t be placed at the guard’s starting position - the guard is there right now and would notice.\nIn the above example, there are only 6 different positions where a new obstruction would cause the guard to get stuck in a loop. The diagrams of these six situations use O to mark the new obstruction, | to show a position where the guard moves up/down, - to show a position where the guard moves left/right, and + to show a position where the guard moves both up/down and left/right.\nOption one, put a printing press next to the guard’s starting position:\n....#.....\n....+---+#\n....|...|.\n..#.|...|.\n....|..#|.\n....|...|.\n.#.O^---+.\n........#.\n#.........\n......#...\nOption two, put a stack of failed suit prototypes in the bottom right quadrant of the mapped area:\n....#.....\n....+---+#\n....|...|.\n..#.|...|.\n..+-+-+#|.\n..|.|.|.|.\n.#+-^-+-+.\n......O.#.\n#.........\n......#...\nOption three, put a crate of chimney-squeeze prototype fabric next to the standing desk in the bottom right quadrant:\n....#.....\n....+---+#\n....|...|.\n..#.|...|.\n..+-+-+#|.\n..|.|.|.|.\n.#+-^-+-+.\n.+----+O#.\n#+----+...\n......#...\nOption four, put an alchemical retroencabulator near the bottom left corner:\n....#.....\n....+---+#\n....|...|.\n..#.|...|.\n..+-+-+#|.\n..|.|.|.|.\n.#+-^-+-+.\n..|...|.#.\n#O+---+...\n......#...\nOption five, put the alchemical retroencabulator a bit to the right instead:\n....#.....\n....+---+#\n....|...|.\n..#.|...|.\n..+-+-+#|.\n..|.|.|.|.\n.#+-^-+-+.\n....|.|.#.\n#..O+-+...\n......#...\nOption six, put a tank of sovereign glue right next to the tank of universal solvent:\n....#.....\n....+---+#\n....|...|.\n..#.|...|.\n..+-+-+#|.\n..|.|.|.|.\n.#+-^-+-+.\n.+----++#.\n#+----++..\n......#O..\nIt doesn’t really matter what you choose to use as an obstacle so long as you and The Historians can put it into position without the guard noticing. The important thing is having enough options that you can find one that minimizes time paradoxes, and in this example, there are 6 different positions you could choose.\nYou need to get the guard stuck in a loop by adding a single new obstruction. How many different positions could you choose for this obstruction?"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_4/index.html#day-4-ceres-search",
    "href": "posts/advent_of_code_2024/day_4/index.html#day-4-ceres-search",
    "title": "AOC 2024: Day 4",
    "section": "Day 4: Ceres Search",
    "text": "Day 4: Ceres Search\n“Looks like the Chief’s not here. Next!” One of The Historians pulls out a device and pushes the only button on it. After a brief flash, you recognize the interior of the Ceres monitoring station!\nAs the search for the Chief continues, a small Elf who lives on the station tugs on your shirt; she’d like to know if you could help her with her word search (your puzzle input). She only has to find one word: XMAS.\nThis word search allows words to be horizontal, vertical, diagonal, written backwards, or even overlapping other words. It’s a little unusual, though, as you don’t merely need to find one instance of XMAS - you need to find all of them. Here are a few ways XMAS might appear, where irrelevant characters have been replaced with .:\n..X...\n.SAMX.\n.A..A.\nXMAS.S\n.X....\nThe actual word search will be full of letters instead. For example:\nMMMSXXMASM\nMSAMXMSMSA\nAMXSXMAAMM\nMSAMASMSMX\nXMASAMXAMM\nXXAMMXXAMA\nSMSMSASXSS\nSAXAMASAAA\nMAMMMXMMMM\nMXMXAXMASX\nIn this word search, XMAS occurs a total of 18 times; here’s the same word search again, but where letters not involved in any XMAS have been replaced with .:\n....XXMAS.\n.SAMXMS...\n...S..A...\n..A.A.MS.X\nXMASAMX.MM\nX.....XA.A\nS.S.S.S.SS\n.A.A.A.A.A\n..M.M.M.MM\n.X.X.XMASX\nTake a look at the little Elf’s word search. How many times does XMAS appear?\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\nlibrary(purrr)\nlibrary(stringr)\nlibrary(rlang)\n\n\nAttaching package: 'rlang'\n\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\nlibrary(tibble)\nlibrary(tidyr)\n\ninput &lt;- read_lines(\"input.txt\") |&gt;\n  str_split(\"\") |&gt;\n  map_dfr(\\(x) {\n    x |&gt; \n      set_names(1:length(x)) |&gt; \n      as_tibble_row()\n  })\n\n# First, some functions to help\n# From a cell coorindate in a wordsearch, move n steps in a direction and \n# get the new coordinates\nmove &lt;- function(start, direction, n) {\n  steps &lt;- direction * n\n  start + steps\n}\n\n# Check if a given coordinates are within the bounds of a wordsearch\nwithin_bounds &lt;- function(location, limit_ws) {\n  if (any(dim(limit_ws)-location &lt; 0) || \n      any(location &lt; 1)) return(FALSE)\n  TRUE\n}\n\n# For a given row and col coordinate in a wordsearch, see how many times\n# the word XMAS can be found starting here\ncount_xmas &lt;- function(row, col, wordsearch) {\n  # Only start with cells that contain X\n  if (wordsearch[row,col] != \"X\") return(0)\n  \n  # Look around in all directions\n  directions &lt;- expand_grid(x = -1:1, y = -1:1)\n  \n  # For each direction from the starting cell\n  results &lt;- map2_dbl(\n    directions$x,\n    directions$y,\n    \\(x, y, df = wordsearch) {\n      \n      # For each direction, get letters 3 steps in that direction\n      direction_word &lt;- map_chr(\n        1:3,\n        \\(n, start = c(row, col), step = c(x, y)) {\n          # Move n steps in the current direction and get the new cell location\n          new &lt;- move(start, step, n)\n\n          # If new location is outside wordsearch, return Z\n          if (!within_bounds(new, df)) return(\"Z\")\n          \n          # Otherwise, return the letter\n          return(df[[new[2]]][[new[1]]])\n        }\n      )\n      # If the word in that direction doesn't match XMAS, return 0\n      if (!identical(direction_word, c(\"M\", \"A\", \"S\"))) return(0)\n      \n      # Otherwise, return 1 to indicate an XMAS has been found\n      return(1)\n    }\n  )\n  # Return the total number of XMAS's which start at the current cell\n  sum(results)\n}\n\n# For each cell coordinate in a wordsearch, calculate the total number of XMAS's\ncount_all_xmas &lt;- function(wordsearch) {\n  expand_grid(x = seq_len(NCOL(wordsearch)), \n              y = seq_len(NROW(wordsearch))) |&gt;\n    pmap_dbl(\n      \\(x, y) count_xmas(x, y, wordsearch = wordsearch)\n    ) |&gt;\n    sum()\n}\n\ncount_all_xmas(input)\n\n[1] 2646\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_4/index.html#part-two",
    "href": "posts/advent_of_code_2024/day_4/index.html#part-two",
    "title": "AOC 2024: Day 4",
    "section": "Part Two",
    "text": "Part Two\nThe Elf looks quizzically at you. Did you misunderstand the assignment?\nLooking for the instructions, you flip over the word search to find that this isn’t actually an XMAS puzzle; it’s an X-MAS puzzle in which you’re supposed to find two MAS in the shape of an X. One way to achieve that is like this:\nM.S\n.A.\nM.S\nIrrelevant characters have again been replaced with . in the above diagram. Within the X, each MAS can be written forwards or backwards.\nHere’s the same example from before, but this time all of the X-MASes have been kept instead:\n.M.S......\n..A..MSMS.\n.M.S.MAA..\n..A.ASMSM.\n.M.S.M....\n..........\nS.S.S.S.S.\n.A.A.A.A..\nM.M.M.M.M.\n..........\nIn this example, an X-MAS appears 9 times.\nFlip the word search from the instructions back over to the word search side and try again. How many times does an X-MAS appear?\n\n# For a given row and col coordinate in a wordsearch, see if it is the centre\n# of an x-mas\ncount_x_mas &lt;- function(row, col, wordsearch) {\n  # Only start with cells that contain A\n  if (wordsearch[row,col] != \"A\") return(0)\n  \n  # Only need to look in diagonal directions\n  directions &lt;- expand_grid(x = c(-1, 1), y = c(-1, 1))\n  \n  # For each direction from the starting 'A' cell\n  results &lt;- map2_chr(\n    directions$x,\n    directions$y,\n    \\(x, y, df = wordsearch) {\n      # Get the adjacent cell\n      new &lt;- move(c(row, col), c(x, y), 1)\n      \n      # If out of bounds return Z\n      if (!within_bounds(new, df)) return(\"Z\")\n      \n      # Otherwise, return the letter\n      return(df[[new[2]]][[new[1]]])\n    }\n  )\n  \n  # Is there an X-MAS?\n  valid &lt;- list(\n    c(\"M\", \"M\", \"S\", \"S\"),\n    c(\"S\", \"M\", \"S\", \"M\"),\n    c(\"S\", \"S\", \"M\", \"M\"),\n    c(\"M\", \"S\", \"M\", \"S\")\n  )\n  if (length(keep(valid, \\(x) identical(x, results)))) return(1)\n  return(0)\n}\n\n# For each cell coordinate in a wordsearch, see if it is the center of an x-mas\ncount_all_x_mas &lt;- function(wordsearch) {\n  expand_grid(x = seq_len(NCOL(wordsearch)),\n              y = seq_len(NROW(wordsearch))) |&gt;\n    pmap_dbl(\n      \\(x, y) count_x_mas(x, y, wordsearch = wordsearch)\n    ) |&gt;\n    sum()\n}\n\ncount_all_x_mas(input)\n\n[1] 2000\n\n\nSuccess! ⭐"
  },
  {
    "objectID": "posts/advent_of_code_2024/day_5/index.html",
    "href": "posts/advent_of_code_2024/day_5/index.html",
    "title": "AOC 2024: Day 5",
    "section": "",
    "text": "## Day 5: Print Queue\nSatisfied with their search on Ceres, the squadron of scholars suggests subsequently scanning the stationery stacks of sub-basement 17.\nThe North Pole printing department is busier than ever this close to Christmas, and while The Historians continue their search of this historically significant facility, an Elf operating a very familiar printer beckons you over.\nThe Elf must recognize you, because they waste no time explaining that the new sleigh launch safety manual updates won’t print correctly. Failure to update the safety manuals would be dire indeed, so you offer your services.\nSafety protocols clearly indicate that new pages for the safety manuals must be printed in a very specific order. The notation X|Y means that if both page number X and page number Y are to be produced as part of an update, page number X must be printed at some point before page number Y.\nThe Elf has for you both the page ordering rules and the pages to produce in each update (your puzzle input), but can’t figure out whether each update has the pages in the right order.\nFor example:\n47|53\n97|13\n97|61\n97|47\n75|29\n61|13\n75|53\n29|13\n97|29\n53|29\n61|53\n97|53\n61|29\n47|13\n75|47\n97|75\n47|61\n75|61\n47|29\n75|13\n53|13\n\n75,47,61,53,29\n97,61,53,29,13\n75,29,13\n75,97,47,61,53\n61,13,29\n97,13,75,29,47\nThe first section specifies the page ordering rules, one per line. The first rule, 47|53, means that if an update includes both page number 47 and page number 53, then page number 47 must be printed at some point before page number 53. (47 doesn’t necessarily need to be immediately before 53; other pages are allowed to be between them.)\nThe second section specifies the page numbers of each update. Because most safety manuals are different, the pages needed in the updates are different too. The first update, 75,47,61,53,29, means that the update consists of page numbers 75, 47, 61, 53, and 29.\nTo get the printers going as soon as possible, start by identifying which updates are already in the right order.\nIn the above example, the first update (75,47,61,53,29) is in the right order:\n\n75 is correctly first because there are rules that put each other page after it: 75|47, 75|61, 75|53, and 75|29.\n47 is correctly second because 75 must be before it (75|47) and every other page must be after it according to 47|61, 47|53, and 47|29.\n61 is correctly in the middle because 75 and 47 are before it (75|61 and 47|61) and 53 and 29 are after it (61|53 and 61|29).\n53 is correctly fourth because it is before page number 29 (53|29).\n29 is the only page left and so is correctly last.\n\nBecause the first update does not include some page numbers, the ordering rules involving those missing page numbers are ignored.\nThe second and third updates are also in the correct order according to the rules. Like the first update, they also do not include every page number, and so only some of the ordering rules apply - within each update, the ordering rules that involve missing page numbers are not used.\nThe fourth update, 75,97,47,61,53, is not in the correct order: it would print 75 before 97, which violates the rule 97|75.\nThe fifth update, 61,13,29, is also not in the correct order, since it breaks the rule 29|13.\nThe last update, 97,13,75,29,47, is not in the correct order due to breaking several rules.\nFor some reason, the Elves also need to know the middle page number of each update being printed. Because you are currently only printing the correctly-ordered updates, you will need to find the middle page number of each correctly-ordered update. In the above example, the correctly-ordered updates are:\n75,47,61,53,29\n97,61,53,29,13\n75,29,13\nThese have middle page numbers of 61, 53, and 29 respectively. Adding these page numbers together gives 143.\nOf course, you’ll need to be careful: the actual list of page ordering rules is bigger and more complicated than the above example.\nDetermine which updates are already in the correct order. What do you get if you add up the middle page number from those correctly-ordered updates?\n\nlibrary(stringr)\nlibrary(purrr)\n\ninput &lt;- readr::read_lines(\"input.txt\")\n\n# Separate rules and reports\nrules &lt;- input |&gt;\n  keep(\\(x) str_detect(x, \"\\\\d+\\\\|\\\\d+\"))\nreports &lt;- input |&gt;\n  discard(\\(x) str_detect(x, \"\\\\d+\\\\|\\\\d+|^$\")) |&gt;\n  str_split(\",\")\n\n# Check rule against a report\ncheck_report &lt;- function(report, ruleset = rules) {\n  # For each pair, check if report passes\n  passed &lt;- str_extract_all(ruleset, \"\\\\d+\") |&gt;\n    map_lgl(\n      \\(rule) {\n        !isTRUE(which(report == rule[[2]]) &lt; which(report == rule[[1]]))\n      }\n    ) |&gt;\n    all()\n  \n  # If passes all rules, keep middle number\n  as.numeric(report[ceiling(length(report)/2)]) * passed\n}\n\ntotal &lt;- map_dbl(reports, check_report)\nsum(total)\n\n[1] 5268\n\n\n— Part Two —\nWhile the Elves get to work printing the correctly-ordered updates, you have a little time to fix the rest of them.\nFor each of the incorrectly-ordered updates, use the page ordering rules to put the page numbers in the right order. For the above example, here are the three incorrectly-ordered updates and their correct orderings:\n\n75,97,47,61,53 becomes 97,75,47,61,53.\n61,13,29 becomes 61,29,13.\n97,13,75,29,47 becomes 97,75,47,29,13.\n\nAfter taking only the incorrectly-ordered updates and ordering them correctly, their middle page numbers are 47, 29, and 47. Adding these together produces 123.\nFind the updates which are not in the correct order. What do you get if you add up the middle page numbers after correctly ordering just those updates?\n\n# Try ordering by number of preceding conditions\nn_preceders &lt;- function(n, r) {\n  str_detect(r, str_c(n, \"\\\\|\")) |&gt;\n    sum()\n}\n\norder_by_n &lt;- function(report, ruleset) {\n  # Keep only the relevant rules\n  el_regex &lt;- str_c(report, collapse = \"|\")\n  relevant_rules &lt;- ruleset |&gt;\n    keep(\\(r) str_detect(r, str_c(\"(\", el_regex, \")\\\\|(\", el_regex, \")\")))\n  \n  # Order by number of times a number is first in a relevant rule \n  new_order &lt;- report |&gt;\n    map_int(\\(n) n_preceders(n, r = relevant_rules)) |&gt;\n    order(decreasing = TRUE)\n  \n  # Order report based on this\n  report[new_order]\n}\n\n# Get only incorrect reports\nincorrect_reports &lt;- reports[total == 0]\n\n# For each incorrect report, order and then check/get middle number\nsolution2 &lt;- incorrect_reports |&gt;\n  map_dbl(\n    \\(x) {\n      x |&gt;\n        order_by_n(rules) |&gt;\n        check_report(rules)\n    }\n  )\n\nsum(solution2)\n\n[1] 5799"
  }
]